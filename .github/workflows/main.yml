name: build

on:
  workflow_dispatch: # 允许手动触发工作流
  push:
    tags:
      - "*"

jobs:
  release:
    name: Build and Release for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/x86/64
            sdk_name: -sdk-x86-64_

    env:
      PACKAGE_NAME: luci-app-parentcontrol
      SDK_URL_PATH: ${{ matrix.sdk_url_path }}
      SDK_NAME: ${{ matrix.sdk_name }}
      ARCH: ${{ matrix.arch }}
      CACHE_DIR: ~/cache

    steps:
      - uses: actions/checkout@v2
      
      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -yq gettext libncurses5-dev rsync xsltproc
          
      - name: 创建目录
        run: |
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV
          echo "SDK_DL_DIR=$(mktemp -d)" >> $GITHUB_ENV
          
      - name: 准备构建环境
        run: |
          cd "$SDK_DL_DIR"
          if ! ( wget -q -O - "$SDK_URL_PATH/sha256sums" | grep -- "$SDK_NAME" > sha256sums.small 2>/dev/null ) ; then
            echo "在sha256sums中找不到${SDK_NAME}文件。"
            exit 1
          fi
          SDK_FILE="$(cat sha256sums.small | cut -d' ' -f2 | sed 's/*//g')"
          wget -q -O "$SDK_FILE" "$SDK_URL_PATH/$SDK_FILE"
          if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
            echo "SDK无法验证！"
            exit 1
          fi
          tar -Jxf "$SDK_DL_DIR/$SDK_FILE" -C "$SDK_HOME" --strip=1
          
      - name: 更新Feeds
        run: |
          cd "$SDK_HOME"
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 构建软件包
        run: |
          cd "$SDK_HOME"
          ./scripts/feeds install golang
          ln -s "${{ github.workspace }}" "package/$PACKAGE_NAME"
          make defconfig
          make package/${PACKAGE_NAME}/clean
          make package/${PACKAGE_NAME}/compile -j1 V=s
          find "$SDK_HOME/bin" -type f -name "${PACKAGE_NAME}_*.ipk" \
           -exec cp -f {} "${{ github.workspace }}" \;

      - name: 发布和上传资产
        uses: softprops/action-gh-release@v1
        with:
          files: "*.ipk"
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
